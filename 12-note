
(C:\Anaconda3) C:\Users\佐久間>python
Python 3.6.0 |Anaconda 4.3.1 (64-bit)| (default, Dec 23 2016, 11:57:41) [MSC v.1900 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> 1+1
2
>>> import turtle
>>> import turtle
>>> t = turtle.Turtle()
>>> t.position()
(0.00,0.00)
>>>
>>> t.home()
>>> t.clear()
>>>
>>> for x in range(4):
...   t.forward(200)
...   t.left(90)
...
...
...
...
(C:\Anaconda3) C:\Users\佐久間>python
Python 3.6.0 |Anaconda 4.3.1 (64-bit)| (default, Dec 23 2016, 11:57:41) [MSC v.1900 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import turtle
>>> turtle = turtle.Turtle()
>>> turtle.position()
(0.00,0.00)
>>> exit()

(C:\Anaconda3) C:\Users\佐久間>python
Python 3.6.0 |Anaconda 4.3.1 (64-bit)| (default, Dec 23 2016, 11:57:41) [MSC v.1900 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import turtle
>>> turtle = turtle.Turtle()
>>> turtle.position()
(0.00,0.00)
>>> import turtle
>>> t = turtle.Turtle()
>>> t.position()
(0.00,0.00)
>>>
>>> t.home()
>>> t.clear()
>>>
>>> for x in range(4):
...   t.forward(200)
...   t.left(90)
...
...
...   turtle.home()
... turtle.clear()
  File "<stdin>", line 7
    turtle.clear()
         ^
SyntaxError: invalid syntax
>>> turtle.forward(200)
>>> turtle.left(120)
>>> turtle.forward(200)
>>> turtle.left(120)
>>> turtle.forward(200)
>>> turtle.home()
>>> turtle.clear()
>>> for i in range(3):
... turtle.forward(200)
  File "<stdin>", line 2
    turtle.forward(200)
         ^
IndentationError: expected an indented block
>>> turtle.left(120)
>>> exit
Use exit() or Ctrl-Z plus Return to exit
>>> exit()

(C:\Anaconda3) C:\Users\佐久間>python
Python 3.6.0 |Anaconda 4.3.1 (64-bit)| (default, Dec 23 2016, 11:57:41) [MSC v.1900 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> turtle.home()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'turtle' is not defined
>>> turtle.clear()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'turtle' is not defined
>>> for i in range(3):
... turtle.forward(200)
  File "<stdin>", line 2
    turtle.forward(200)
         ^
IndentationError: expected an indented block
>>> turtle.left(120)import turtle
  File "<stdin>", line 1
    turtle.left(120)import turtle
                         ^
SyntaxError: invalid syntax
>>> turtle = turtle.Turtle()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'turtle' is not defined
>>> turtle.position()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'turtle' is not defined
>>> import turtle
>>> turtle = turtle.Turtle()
>>> turtle.position()
(0.00,0.00)
>>> turtle.home()
>>> turtle.clear()
>>> for i in range(3):
...   turtle.forward(200)
...   turtle.left(120)
...
>>>
>>> turtle.home()
>>> turtle.clear()
>>> turtle.forward(200)
>>> turtle.left(120)
>>> turtle.forward(200)
>>> turtle.left(120)
>>> turtle.forward(200)turtle.home()
  File "<stdin>", line 1
    turtle.forward(200)turtle.home()
                            ^
SyntaxError: invalid syntax
>>> turtle.clear()
>>> for i in range(5):
... turtle.forward(200)
  File "<stdin>", line 2
    turtle.forward(200)
         ^
IndentationError: expected an indented block
>>> turtle.left(144)
>>> turtle.home()
>>> turtle.clear()
>>> for i in range(5):
...   turtle.forward(200)
...   turtle.left(144)
... turtle.home()
  File "<stdin>", line 4
    turtle.home()
         ^
SyntaxError: invalid syntax
>>> turtle.clear()
>>> for i in range(5):
...   turtle.forward(200)
...   turtle.left(144)
...
...
>>>
>>>
>>>
>>> turtle.home()
>>> turtle.clear()
>>> t=turtle
>>> t.forward(100)
>>> t.up()
>>> t.forward(100)
>>> t.down()
>>> t.forward(100)
>>>
>>> turtle.home()
>>> turtle.clear()
>>> t=turtle
>>> for i in range(4):
...   t.forward(200)
...   turtle.left(90)
...
...
>>> turtle.home()
>>> turtle.clear()
>>> t=turtle
>>> for i in range(4):
...   t.forward(5)
...   turtle.left(90)
...
...
>>> for i in range(4):
...   t.forward(100)
...   turtle.left(90)
...
...
>>> turtle.clear()
>>> turtle.home()
>>> turtle.clear()
>>> t=turtle
>>> for i in range(4):
...   t.forward(50)
...   t.left(90)
... t.up()
  File "<stdin>", line 4
    t.up()
    ^
SyntaxError: invalid syntax
>>> t.forward(75)
>>> t.down()
>>> for i in range(4):
...   t.forward(50)
...   t.left(90)
... t.left(90)
  File "<stdin>", line 4
    t.left(90)
    ^
SyntaxError: invalid syntax
>>> t.up()
>>> t.forward(75)
>>> t.right(90)
>>> for i in range(4):
...   t.forward(50)
...   t.left(90)
... t.left(180)
  File "<stdin>", line 4
    t.left(180)
    ^
SyntaxError: invalid syntax
>>> t.up()
>>> t.forward(75)
>>> t.left(180)
>>> for i in range(4):
...   t.forward(50)
...   t.left(90)
...
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> turtle.home()
>>> turtle.clear()
>>> t=turtle
>>> for i in range(4):
...   t.forward(50)
...   t.left(90)
... t.up()
  File "<stdin>", line 4
    t.up()
    ^
SyntaxError: invalid syntax
>>> t.forward(75)
>>> t.down()
>>> for i in range(4):
...   t.forward(50)
...   t.left(90)
... t.left(90)
  File "<stdin>", line 4
    t.left(90)
    ^
SyntaxError: invalid syntax
>>> t.up()
>>> t.forward(75)
>>> t.right(90)
>>> for i in range(4):
...   t.forward(50)
...   t.left(90)
... t.left(180)
  File "<stdin>", line 4
    t.left(180)
    ^
SyntaxError: invalid syntax
>>> t.up()
>>> t.forward(75)
>>> t.left(180)
>>> for i in range(4):
...   t.forward(50)
...   t.left(90)
... turtle.home()
  File "<stdin>", line 4
    turtle.home()
         ^
SyntaxError: invalid syntax
>>> turtle.clear()
>>> t=turtle
>>> for i in range(4):
...   t.forward(50)
...   t.left(90)
... t.up()
  File "<stdin>", line 4
    t.up()
    ^
SyntaxError: invalid syntax
>>> t.forward(75)
>>> t.down()
>>> for i in range(4):
...   t.forward(50)
...   t.left(90)
... t.left(90)
  File "<stdin>", line 4
    t.left(90)
    ^
SyntaxError: invalid syntax
>>> t.up()
>>> t.forward(75)
>>> t.right(90)
>>> t.down()
>>> for i in range(4):
...   t.forward(50)
...   t.left(90)
... t.left(180)
  File "<stdin>", line 4
    t.left(180)
    ^
SyntaxError: invalid syntax
>>> t.up()
>>> t.forward(75)
>>> t.left(180)
>>> t.down()
>>> for i in range(4):
...   t.forward(50)
...   t.left(90)
... turtle.home()
  File "<stdin>", line 4
    turtle.home()
         ^
SyntaxError: invalid syntax
>>> turtle.clear()
>>> t=turtle
>>> for i in range(4):
...   t.forward(50)
...   t.left(90)
...
...
>>> turtle.home()
>>> turtle.clear()
>>> t=turtle
>>> for i in range(4):
...    for i in range(4):
...     t.forward(50)
...     t.left(90)
...
... turtle.home()
  File "<stdin>", line 6
    turtle.home()
         ^
SyntaxError: invalid syntax
>>> turtle.clear()
>>> t=turtle
>>> for i in range(4):
...    for i in range(4):
...     t.forward(50)
...     t.left(90)
...
...
>>> t.clear
<bound method RawTurtle.clear of <turtle.Turtle object at 0x0000027F1EBED630>>
>>> t.clear()
>>> turtle.home()
>>> turtle.clear()
>>> t=turtle
>>> for i in range(4):
...   t.left(90)
...    for i in range(4):
  File "<stdin>", line 3
    for i in range(4):
    ^
IndentationError: unexpected indent
>>>     t.forward(50)
  File "<stdin>", line 1
    t.forward(50)
    ^
IndentationError: unexpected indent
>>>     t.left(90)
  File "<stdin>", line 1
    t.left(90)
    ^
IndentationError: unexpected indent
>>>
...
>>>
>>>
>>>
>>> turtle.home()
>>> turtle.clear()
>>> t=turtle
>>> for i in range(4):
...   t.left(90)
...    for i in range(4):
  File "<stdin>", line 3
    for i in range(4):
    ^
IndentationError: unexpected indent
>>>     t.forward(50)
  File "<stdin>", line 1
    t.forward(50)
    ^
IndentationError: unexpected indent
>>>     t.left(90)
  File "<stdin>", line 1
    t.left(90)
    ^
IndentationError: unexpected indent
>>>
...
>>>
>>>
>>> turtle.home()
>>> turtle.clear()
>>> t=turtle
>>> for i in range(4):
...   t.left(90)
...    for i in range(4):
  File "<stdin>", line 3
    for i in range(4):
    ^
IndentationError: unexpected indent
>>>     t.forward(50)
  File "<stdin>", line 1
    t.forward(50)
    ^
IndentationError: unexpected indent
>>>     t.left(90)
  File "<stdin>", line 1
    t.left(90)
    ^
IndentationError: unexpected indent
>>>
... turtle.home()
>>> turtle.clear()
>>> t=turtle
>>> for i in range(4):
...   t.forward(5)
...    for i in range(4):
  File "<stdin>", line 3
    for i in range(4):
    ^
IndentationError: unexpected indent
>>>     t.forward(50)
  File "<stdin>", line 1
    t.forward(50)
    ^
IndentationError: unexpected indent
>>>     t.left(90)
  File "<stdin>", line 1
    t.left(90)
    ^
IndentationError: unexpected indent
>>>
... turtle.home()
>>> turtle.clear()
>>> t=turtle
>>> for i in range(4):
...   t.forward(5)
...   for i in range(4):
...     t.forward(50)
...     t.left(90)
...    t.left(-90)
  File "<stdin>", line 6
    t.left(-90)
              ^
IndentationError: unindent does not match any outer indentation level
>>>
... turtle.home()
>>> turtle.clear()
>>> t=turtle
>>> for i in range(4):
...   t.forward(5)
...   for x in range(4):
...     t.forward(50)
...     t.left(90)
...    t.left(-90)
  File "<stdin>", line 6
    t.left(-90)
              ^
IndentationError: unindent does not match any outer indentation level
>>>
...
>>>
>>>
>>> for i in range(4):
...   t.forward(5)
...   for x in range(4):
...     t.forward(50)
...     t.left(90)
...    t.left(-90)
  File "<stdin>", line 6
    t.left(-90)
              ^
IndentationError: unindent does not match any outer indentation level
>>>
... for i in range(4):
...   t.forward(5)
...   for x in range(4):
...     t.forward(50)
...     t.left(90)
...    t.left(-90)
  File "<stdin>", line 7
    t.left(-90)
              ^
IndentationError: unindent does not match any outer indentation level
>>>
... for i in range(4):
...   t.forward(5)
...   for x in range(4):
...     t.forward(50)
...     t.left(90)
...    t.left(-90)
  File "<stdin>", line 7
    t.left(-90)
              ^
IndentationError: unindent does not match any outer indentation level
>>>
...
>>>
>>>
>>> for i in range(4):
...   t.forward(5)
...   for x in range(4):
...     t.forward(50)
...     t.left(90)
...   t.left(-90)
...
...
>>> t.clear()
>>> turtle.home()
>>> turtle.clear()
>>> t=turtle
>>> for i in range(4):
...   t.up()
...   t.forward(10)
...   for x in range(4):
...     t.down()
...     t.forward(50)
...     t.left(90)
...   t.left(-90)
...
...
>>>